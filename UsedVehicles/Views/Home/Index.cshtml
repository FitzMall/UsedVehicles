@model UsedVehicles.Models.UsedVehicleModel

@{
    ViewBag.Title = "Fitzmall Used Vehicles";

    System.Globalization.NumberFormatInfo nfi = new System.Globalization.CultureInfo("en-US", false).NumberFormat;
    nfi.CurrencyDecimalDigits = 0;
    nfi.PercentDecimalDigits = 1;
    nfi.PercentPositivePattern = 1;

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    var titleStatus = UsedVehicles.Business.SqlQueries.GetAllTitleStatus();


}


@section CSS
{

    <script src="~/Scripts/jquery-ui.js"></script>
    <link href="~/Scripts/jquery-ui.css" rel="stylesheet" />
}
<style type="text/css">
    .nav-tabs li.active a, .nav-tabs li.active a:hover, .nav-tabs li.active a:focus{
        color: #ffedea;
        cursor: default;
        background-color: #428bca;
        border: 1px solid #dddddd;
        border-bottom-color: transparent;
    }
    .nav-tabs li a {
        border: 1px solid #dddddd;   
        padding: 10px 10px; 
    }
    .container{
        max-width:100%;
    }
    .input-radio{
        margin-left: 25px;
    }
</style>

<div class="jumbotron">
    <h1>Fitzmall Used Vehicles over 90 Days</h1>
    <div class="row">
        <div class="col-sm-9">
            <h3>Select a Date:</h3>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-2">
                        @Html.DropDownListFor(n => n.MonthId, new SelectList(UsedVehicles.Business.Enums.Months, "MonthId", "Name"), new { @class = "form-control form-inline" })
                    </div>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(n => n.YearId, new SelectList(UsedVehicles.Business.Enums.Years, "YearId", "Name"), new { @class = "form-control form-inline" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.RadioButtonFor(n => n.ReportFilter, "ALL", new { @class = "input-radio" }) All
                        @Html.RadioButtonFor(n => n.ReportFilter, "CPO", new { @style = "margin-left:25px;"}) CPO
                        @Html.RadioButtonFor(n => n.ReportFilter, "NEXTCAR", new { @style = "margin-left:25px;" }) Nextcar
                        @Html.RadioButtonFor(n => n.ReportFilter, "HANDYMAN", new { @style = "margin-left:25px;" }) Handyman
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-9">
                        <button class="btn btn-primary" id="SubmitButton" type="submit" value="submit" name="Submit">Submit</button>
                    </div>
                </div>
            </div>
        </div>

    }
</div>
<div class="row" style="margin-top:10px;">
    <div class="col-md-12">
        <h2>Used Vehicles for @Model.MonthId/@Model.YearId</h2>
        @{ 
            decimal ListAmountTotal = 0;
            decimal CostAmountTotal = 0;
            decimal NewListAmountTotal = 0;
            decimal DiffToMarketAmountTotal = 0;

            int SoldCount = 0;
            decimal SoldAmountTotal = 0;
            decimal VehicleProfitTotal = 0;

            int DaysTotal = 0;
            int VehicleCount = 0;

        }
        
    </div>
   
</div>

@if (Model.UsedVehicles != null)
{
    var locations = Model.AllUsedVehicles.Select(x => x.Location).Distinct();
    var reportDate = new DateTime(Model.YearId, Model.MonthId, 1);

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="myTab" role="tablist" style="font-size: 12px;">
            <li class="nav-item active">
                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">90 Day Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="inventory-tab" data-toggle="tab" href="#inventory" role="tab" aria-controls="inventory" aria-selected="true">Inv Summary</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status8-tab" data-toggle="tab" href="#status8" role="tab" aria-controls="status8" aria-selected="true">Status 8</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status9-tab" data-toggle="tab" href="#status9" role="tab" aria-controls="status9" aria-selected="true">Status 9</a>
            </li>    
            <li class="nav-item">
                <a class="nav-link" id="status3-tab" data-toggle="tab" href="#status3" role="tab" aria-controls="status3" aria-selected="true">Status 3</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status5-tab" data-toggle="tab" href="#status5" role="tab" aria-controls="status5" aria-selected="true">Status 5</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status21-tab" data-toggle="tab" href="#status21" role="tab" aria-controls="status21" aria-selected="true">Status 21</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status14-tab" data-toggle="tab" href="#status14" role="tab" aria-controls="status14" aria-selected="true">Status 14</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status15-tab" data-toggle="tab" href="#status15" role="tab" aria-controls="status15" aria-selected="true">Status 15</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="status20-tab" data-toggle="tab" href="#status20" role="tab" aria-controls="status20" aria-selected="true">Status 20</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="all-tab" data-toggle="tab" href="#all" role="tab" aria-controls="all" aria-selected="false">All</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="all-transfers" data-toggle="tab" href="#transfers" role="tab" aria-controls="transfers" aria-selected="false">Transfers</a>
            </li>
            @foreach (var location in locations)
            {
                <li class="nav-item">
                    <a class="nav-link" id="@location-tab" data-toggle="tab" href="#@location" role="tab" aria-controls="@location" aria-selected="false">@location</a>
                </li>
            }
            <li class="nav-item">
                <a class="nav-link" id="repo-tab" data-toggle="tab" href="#repo" role="tab" aria-controls="repo" aria-selected="true">Repos</a>
            </li>            
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade active in" id="home" role="tabpanel" aria-labelledby="home-tab">
                <h3>90 Day Summary as of @reportDate.ToShortDateString()</h3>

                @{
                    decimal SummaryTotalVehicles = 0;
                    decimal SummaryTotalSold = 0;
                    //decimal SummaryAverageDays = 0;
                    decimal SummaryListAmount = 0;
                    decimal SummaryCostAmount = 0;
                    decimal SummaryNewListAmount = 0;
                    decimal SummaryDiffCostToMarket = 0;
                    decimal SummaryLastAdjust = 0;
                    decimal SummarySoldLoss = 0;
                    decimal SummarySoldAll = 0;
                    int SummaryDaysTotal = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="vehicleListing-summary" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Location</th>
                            <th class="text-center"># Units</th>
                            <th class="text-center"># Sold</th>
                            <th class="text-center">Avg Days</th>
                            <th class="text-center">List Amount</th>
                            <th class="text-center">Cost Amount</th>
                            <th class="text-center">New List Amount</th>
                            <th class="text-center">Diff Cost To Market</th>
                            <th class="text-center">Last Adjust</th>
                            <th class="text-center">Sold Front Loss</th>
                            <th class="text-center">Sold Front All</th>

                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var location in locations)
                        {
                            var storeVehicles = Model.UsedVehicles.FindAll(x => x.Location == @location);


                            decimal StoreListAmountTotal = 0;
                            decimal StoreCostAmountTotal = 0;
                            decimal StoreNewListAmountTotal = 0;
                            decimal StoreDiffToMarketAmountTotal = 0;

                            int StoreSoldCount = 0;
                            decimal StoreSoldAmountTotal = 0;
                            decimal StoreVehicleProfitTotal = 0;
                            decimal StoreVehicleLossTotal = 0;

                            int StoreDaysTotal = 0;
                            int StoreVehicleCount = 0;

                            var StoreaverageDays = 0;

                            StoreVehicleCount = storeVehicles.Count;

                            foreach (var vehicle in storeVehicles)
                            {

                                var diffToMarket = vehicle.ListAmount - vehicle.CostAmount;
                                StoreDaysTotal += vehicle.DaysInventory;

                                StoreListAmountTotal += vehicle.ListAmount;
                                StoreCostAmountTotal += vehicle.CostAmount;
                                StoreNewListAmountTotal += vehicle.NewListAmount;
                                StoreDiffToMarketAmountTotal += diffToMarket;

                                decimal vehicleProfit = 0;

                                if (vehicle.IsSold)
                                {
                                    vehicleProfit = vehicle.SellPrice - vehicle.CostAmount;
                                    StoreSoldCount += 1;
                                    StoreSoldAmountTotal += vehicle.SellPrice;
                                    StoreVehicleProfitTotal += vehicleProfit;

                                    if (vehicleProfit < 0)
                                    {
                                        StoreVehicleLossTotal += vehicleProfit;
                                    }
                                }

                                StoreaverageDays = (int)(StoreDaysTotal / StoreVehicleCount);

                            }


                            var profitIndicator = "";
                            var lossIndicator = "";

                            if (StoreVehicleProfitTotal < 0)
                            {
                                profitIndicator = "style=color:red";
                            }

                            if (StoreVehicleLossTotal < 0)
                            {
                                lossIndicator = "style=color:red";
                            }

                            <tr>

                                <td class="text-center">@location</td>
                                <td class="text-center">@StoreVehicleCount</td>
                                <td class="text-center">@StoreSoldCount</td>
                                <td class="text-center">@StoreaverageDays</td>
                                <td class="text-center">@StoreListAmountTotal.ToString("C", nfi)</td>
                                <td class="text-center">@StoreCostAmountTotal.ToString("C", nfi)</td>
                                <td class="text-center">@StoreNewListAmountTotal.ToString("C", nfi)</td>
                                <td class="text-center">@StoreDiffToMarketAmountTotal.ToString("C", nfi)</td>
                                <td class="text-center">0</td>
                                <td class="text-center" @lossIndicator>@StoreVehicleLossTotal.ToString("C", nfi)</td>
                                <td class="text-center" @profitIndicator>@StoreVehicleProfitTotal.ToString("C", nfi)</td>
                            </tr>

                            SummaryTotalVehicles += StoreVehicleCount;
                            SummaryTotalSold += StoreSoldCount;
                            SummaryDaysTotal += StoreDaysTotal;
                            SummaryListAmount += StoreListAmountTotal;
                            SummaryCostAmount += StoreCostAmountTotal;
                            SummaryNewListAmount += StoreNewListAmountTotal;
                            SummaryDiffCostToMarket += StoreDiffToMarketAmountTotal;
                            SummaryLastAdjust += 0;
                            SummarySoldLoss += StoreVehicleLossTotal;
                            SummarySoldAll += StoreVehicleProfitTotal;

                        }

                        @{ 
                            var SummaryAverageDays = 0;
                            if (SummaryTotalVehicles > 0)
                            {
                                SummaryAverageDays = (int)(SummaryDaysTotal / SummaryTotalVehicles);
                            }


                            var profitSummaryIndicator = "";
                            var lossSummaryIndicator = "";

                            if (SummarySoldAll < 0)
                            {
                                profitSummaryIndicator = "style=color:red";
                            }

                            if (SummarySoldLoss < 0)
                            {
                                lossSummaryIndicator = "style=color:red";
                            }

                            decimal SummarySoldPercent = 0;
                            if (SummaryTotalVehicles > 0)
                            {
                                SummarySoldPercent = SummaryTotalSold / SummaryTotalVehicles;
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@SummaryTotalVehicles</th>
                            <th class="text-center">@SummaryTotalSold</th>
                            <th class="text-center">@SummaryAverageDays</th>
                            <th class="text-center">@SummaryListAmount.ToString("C", nfi)</th>
                            <th class="text-center">@SummaryCostAmount.ToString("C", nfi)</th>
                            <th class="text-center">@SummaryNewListAmount.ToString("C", nfi)</th>
                            <th class="text-center">@SummaryDiffCostToMarket.ToString("C", nfi)</th>
                            <th class="text-center">@SummaryLastAdjust.ToString("C", nfi)</th>
                            <th class="text-center" @lossSummaryIndicator>@SummarySoldLoss.ToString("C", nfi)</th>
                            <th class="text-center" @profitSummaryIndicator>@SummarySoldAll.ToString("C", nfi)</th>

                        </tr>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center" colspan="2">&nbsp;</th>
                            <th class="text-center">@SummarySoldPercent.ToString("P", nfi)</th>
                            <th class="text-center" colspan="8">&nbsp;</th>
                        </tr>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Repos</th>
                            <th class="text-center" id="RepoSummaryUnits"></th>
                            <th class="text-center" id="RepoSummarySold"></th>
                            <th class="text-center" id="RepoSummaryDays"></th>
                            <th class="text-center" id="RepoSummaryList"></th>
                            <th class="text-center" id="RepoSummaryCost"></th>
                            <th class="text-center" id="RepoSummaryNewList"></th>
                            <th class="text-center" id="RepoSummaryDiffCost"></th>
                            <th class="text-center" id="RepoSummaryLastAdjust"></th>
                            <th class="text-center" id="RepoSummarySoldLoss"></th>
                            <th class="text-center" id="RepoSummarySoldAll"></th>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="tab-pane fade" id="inventory" role="tabpanel" aria-labelledby="inventory-tab">
                <h3>Current Inventory Summary as of @DateTime.Now.ToShortDateString()</h3>

                <table class="table table-responsive table-bordered table-striped" id="inventory-summary" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Location</th>
                            <th class="text-center">Inv Amount</th>
                            <th class="text-center">Inv Count</th>
                            <th class="text-center">0-30 Day Count</th>
                            <th class="text-center">0-30 Day %</th>
                            <th class="text-center">31-60 Day Count</th>
                            <th class="text-center">31-60 Day %</th>
                            <th class="text-center">61-90 Day Count</th>
                            <th class="text-center">61-90 Day %</th>
                            <th class="text-center">90+ Day Count</th>
                            <th class="text-center">90+ Day %</th>

                        </tr>
                    </thead>
                    <tbody>

                        @{ 
                            var TotalCount = 0;
                            decimal TotalAmount = 0;
                            var TotalDayCount30 = 0;
                            var TotalDayCount60 = 0;
                            var TotalDayCount90 = 0;
                            var TotalDayCount90Over = 0;

                        }

                        @foreach (var location in locations)
                        {
                            var storeVehicles = Model.AllUsedVehicles.FindAll(x => x.Location == @location);

                            var TotalInventoryCount = 0;
                            decimal TotalInventoryAmount = 0;
                            var DayCount30 = 0;
                            var DayCount60 = 0;
                            var DayCount90 = 0;
                            var DayCount90Over = 0;

                            foreach (var vehicle in storeVehicles)
                            {
                                TotalInventoryCount += 1;
                                TotalInventoryAmount += vehicle.CostAmount;

                                if (vehicle.DaysInventory > 90)
                                {
                                    DayCount90Over += 1;
                                }
                                else if (vehicle.DaysInventory < 91 && vehicle.DaysInventory > 60)
                                {
                                    DayCount90 += 1;
                                }
                                else if (vehicle.DaysInventory < 61 && vehicle.DaysInventory > 30)
                                {
                                    DayCount60 += 1;
                                }
                                else if (vehicle.DaysInventory < 31)
                                {
                                    DayCount30 += 1;
                                }

                            }

                            var DayCount30Percent = ((double)DayCount30 / (double)TotalInventoryCount);
                            var DayCount60Percent = ((double)DayCount60 / (double)TotalInventoryCount);
                            var DayCount90Percent = ((double)DayCount90 / (double)TotalInventoryCount);
                            var DayCount90OverPercent = ((double)DayCount90Over / (double)TotalInventoryCount);

                            TotalDayCount30 += DayCount30;
                            TotalDayCount60 += DayCount60;
                            TotalDayCount90 += DayCount90;
                            TotalDayCount90Over += DayCount90Over;

                            TotalCount += TotalInventoryCount;
                            TotalAmount += TotalInventoryAmount;

                            <tr>
                                <td class="text-center">@location</td>
                                <td class="text-center">@TotalInventoryAmount.ToString("C", nfi)</td>
                                <td class="text-center"><a href="@applicationPath/Home/Inventory/@location/0/0/@Model.ReportFilter">@TotalInventoryCount</a></td>
                                <td class="text-center"><a href="@applicationPath/Home/Inventory/@location/0/30/@Model.ReportFilter">@DayCount30</a></td>
                                <td class="text-center">@DayCount30Percent.ToString("P", nfi)</td>
                                <td class="text-center"><a href="@applicationPath/Home/Inventory/@location/30/60/@Model.ReportFilter">@DayCount60</a></td>
                                <td class="text-center">@DayCount60Percent.ToString("P", nfi)</td>
                                <td class="text-center"><a href="@applicationPath/Home/Inventory/@location/60/90/@Model.ReportFilter">@DayCount90</a></td>
                                <td class="text-center">@DayCount90Percent.ToString("P", nfi)</td>
                                <td class="text-center"><a href="@applicationPath/Home/Inventory/@location/90/0/@Model.ReportFilter">@DayCount90Over</a></td>
                                <td class="text-center">@DayCount90OverPercent.ToString("P", nfi)</td>
                            </tr>

                        }
                    </tbody>
                    <tfoot>
                        @{ 
                            var TotalDayCount30Percent = ((double)TotalDayCount30 / (double)TotalCount);
                            var TotalDayCount60Percent = ((double)TotalDayCount60 / (double)TotalCount);
                            var TotalDayCount90Percent = ((double)TotalDayCount90 / (double)TotalCount);
                            var TotalDayCount90OverPercent = ((double)TotalDayCount90Over / (double)TotalCount);

                        }
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@TotalAmount.ToString("C", nfi)</th>
                            <th class="text-center"><a href="@applicationPath/Home/Inventory/ALL/0/0/@Model.ReportFilter">@TotalCount</a></th>
                            <th class="text-center"><a href="@applicationPath/Home/Inventory/ALL/0/30/@Model.ReportFilter">@TotalDayCount30</a></th>
                            <th class="text-center">@TotalDayCount30Percent.ToString("P", nfi)</th>
                            <th class="text-center"><a href="@applicationPath/Home/Inventory/ALL/30/60/@Model.ReportFilter">@TotalDayCount60</a></th>
                            <th class="text-center">@TotalDayCount60Percent.ToString("P", nfi)</th>
                            <th class="text-center"><a href="@applicationPath/Home/Inventory/ALL/60/90/@Model.ReportFilter">@TotalDayCount90</a></th>
                            <th class="text-center">@TotalDayCount90Percent.ToString("P", nfi)</th>
                            <th class="text-center"><a href="@applicationPath/Home/Inventory/ALL/90/0/@Model.ReportFilter">@TotalDayCount90Over</a></th>
                            <th class="text-center">@TotalDayCount90OverPercent.ToString("P", nfi)</th>
                        </tr>

                    </tfoot>
                </table>

</div>

            <div class="tab-pane fade" id="status8" role="tabpanel" aria-labelledby="status8-tab">
                <h3>Wholesale Status 8 Vehicles</h3>

                @{
                    decimal WholesaleTotalVehicles = 0;
                    decimal WholesaleTotalAmount = 0;

                    decimal TotalClearTitle = 0;
                    decimal TotalTitleBank = 0;
                    decimal TotalTitleCustomer = 0;
                    decimal TotalTitleInterco = 0;
                    decimal TotalTitleAuction = 0;
                    decimal TotalLienBank = 0;
                    decimal TotalLienCustomer = 0;
                    decimal TotalOdomCustomer = 0;
                    decimal TotalPOACustomer = 0;
                    decimal TotalPayoffCustomer = 0;
                    decimal TotalOutStateTitle = 0;
                    decimal TotalDupTitle = 0;
                    decimal TotalOther = 0;
                    decimal TotalNoStatus = 0;
                    decimal TotalNoTitleDispose = 0;
                    decimal TotalETitle = 0;

                }
                <table class="table table-responsive table-bordered table-striped" id="status8-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                            <th class="text-center">Acct Inv Amount</th>
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Title Updated</th>
                            <th class="text-center">Memo 2</th>
                            <th class="text-center">Lot</th>
                            <th class="text-center">Sold</th>
                            <th class="text-center">Notes</th>
                        </tr>
                    </thead>

                    <tbody>
                        @{ 

                            var wholesaleVehicles = Model.AuctionVehicles.FindAll(x => x.Status == 8);

                            foreach (var vehicle in wholesaleVehicles)
                            {

                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                var statusUpdated = "";

                                if (titleDue != null)
                                {
                                    statusUpdated = titleDue.UpdateDate.ToShortDateString();
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }

                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                WholesaleTotalVehicles += 1;
                                WholesaleTotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach(var hist in invHistory)
                                {
                                    if(hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 8);

                                var lotLocation = "";
                                var Notes = "";
                                var soldDate = new DateTime();

                                if(vehicleNotes != null)
                                {
                                    lotLocation = vehicleNotes.LotLocation;
                                    Notes = vehicleNotes.Notes;
                                    soldDate = vehicleNotes.VehicleSoldDate;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">@statusUpdated</td>
                                    <td class="text-center">@vehicle.Memo2</td>
                                    <td class="text-center">@lotLocation</td>
                                    <td class="text-center">
                                        @if (soldDate.ToShortDateString() != "1/1/0001" && soldDate.ToShortDateString() != "1/1/1900")
                                        {
                                            @:@soldDate.ToShortDateString()
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a class="status8editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }   
                                    </td>
                                </tr>
                                }
                            }
                        </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@WholesaleTotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@WholesaleTotalAmount.ToString("C",nfi)</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>

                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br/>
                                E-Title<br/>
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br/>
                                @TotalETitle<br/>
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status8-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                order: [[0, "asc"],[8,"desc"]],
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [7, 8, 9, 10]},
                                   { type: 'date', targets: [12, 15] },
                                ]

                            });
                        });

                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status8editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=8&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });


                        });

                </script>

            </div>

            <div class="tab-pane fade" id="status9" role="tabpanel" aria-labelledby="status9-tab">
                <h3>Wholesale Auction Status 9 Vehicles</h3>

                @{
                    decimal AuctionTotalVehicles = 0;
                    decimal AuctionTotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status9-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>

                            <th class="text-center">Acct Inv Amount</th>
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Title Updated</th>
                            <th class="text-center">Memo 2</th>
                            <th class="text-center">Lot</th>
                            <th class="text-center">Sold</th>
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var wholesaleAuctionVehicles = Model.AuctionVehicles.FindAll(x => x.Status == 9);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in wholesaleAuctionVehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";
                                var statusUpdated = "";

                                if (titleDue != null)
                                {
                                    statusUpdated = titleDue.UpdateDate.ToShortDateString();
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                AuctionTotalVehicles += 1;
                                AuctionTotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                if(vehicle.StockNumber == "G31885B")
                                {
                                    var x = "holy shit";
                                }

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 9);

                                var lotLocation = "";
                                var Notes = "";
                                var soldDate = new DateTime();

                                if (vehicleNotes != null)
                                {
                                    lotLocation = vehicleNotes.LotLocation;
                                    Notes = vehicleNotes.Notes;
                                    soldDate = vehicleNotes.VehicleSoldDate;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>

                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">@statusUpdated</td>
                                    <td class="text-center">@vehicle.Memo2</td>
                                    <td class="text-center">@lotLocation</td>
                                    <td class="text-center">
                                        @if (soldDate.ToShortDateString() != "1/1/0001" && soldDate.ToShortDateString() != "1/1/1900")
                                        {
                                            @:@soldDate.ToShortDateString()
                                        }
                                    </td>
                                    <td class="text-center">
                                        <a class="status9editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@AuctionTotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@AuctionTotalAmount.ToString("C",nfi)</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status9-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                order: [[0, "asc"], [8, "desc"]],
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },
                                   { type: 'date', targets: [12, 15] },
                                ]

                            });
                        });

                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status9editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=9&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>

            <div class="tab-pane fade" id="status3" role="tabpanel" aria-labelledby="status3-tab">
                <h3>Status 3 Vehicles</h3>

                @{
                    decimal Status3TotalVehicles = 0;
                    decimal Status3TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status3-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">In Service Miles</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                            
                            <th class="text-center">Acct Inv Amount</th>
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Memo 1</th>
                            <th class="text-center">Memo 2</th>
                            <th class="text-center">Last Service Date</th>
                            <th class="text-center">Last RO Miles</th>
                            <th class="text-center">Recall Status</th>
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status3Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 3);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status3Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status3TotalVehicles += 1;
                                Status3TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 3);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }

                                var recalls = Model.AllOpenRecalls.FindAll(x => x.StockNo.Trim() == vehicle.StockNumber.Trim() && x.VIN.Trim() == vehicle.VIN.Trim());

                                var recallNotes = "";
                                foreach(var recall in recalls)
                                {
                                    recallNotes += recall.Description + ", ";
                                }
                                recallNotes = recallNotes.TrimEnd(' ').TrimEnd(',');

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                   
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">@vehicle.Memo1</td>
                                    <td class="text-center">@vehicle.Memo2</td>
                                    <td class="text-center">@vehicle.RODate.ToShortDateString()</td>
                                    <td class="text-center">@vehicle.ROMiles</td>
                                    <td class="text-center">
                                        
                                        <a href="#" data-toggle="tooltip" title="@recallNotes">
                                            @recalls.Count
                                        </a>
                                    </td>

                                    <td class="text-center">
                                        <a class="status3editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status3TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status3TotalAmount.ToString("C",nfi)</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                        


                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status3-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },
                                  { type: 'date', targets: [14] },

                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status3editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=3&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>

            <div class="tab-pane fade" id="status5" role="tabpanel" aria-labelledby="status5-tab">
                <h3>Status 5 Vehicles</h3>

                @{
                    decimal Status5TotalVehicles = 0;
                    decimal Status5TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status5-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Cost Amount</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                            <th class="text-center">Customer</th>
                            <th class="text-center">Sold Date</th>
                            <th class="text-center">Deal</th>
                        

                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status5Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 5);
                            status5Vehicles.AddRange(Model.NewStatus5Vehicles);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status5Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status5TotalVehicles += 1;
                                Status5TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 5);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.SellPrice.ToString("C", nfi)</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                    <td class="text-center">@vehicle.CustomerName</td>
                                    <td class="text-center">
                                    @if (vehicle.SoldDate.ToShortDateString() != "1/1/0001" && vehicle.SoldDate.ToShortDateString() != "1/1/1900")
                                    {
                                        @:@vehicle.SoldDate.ToShortDateString()
                                        }
                                    </td>
                                    <td class="text-center"><a href="http://10.254.162.190/SalesCommission/Sales/DealDetail/@vehicle.DealNumber" target="_blank">@vehicle.DealNumber</a></td>




                                    <td class="text-center">
                                        <a class="status5editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status5TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status5TotalAmount.ToString("C",nfi)</th>

                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status5-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },
                                  { type: 'date', targets: [12]},
                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status5editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=5&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>

            <div class="tab-pane fade" id="status21" role="tabpanel" aria-labelledby="status21-tab">
                <h3>Status 21 Vehicles</h3>

                @{
                    decimal Status21TotalVehicles = 0;
                    decimal Status21TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status21-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Cost Amount</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                        
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status21Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 21);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status21Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status21TotalVehicles += 1;
                                Status21TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 21);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                   
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">
                                        <a class="status21editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status21TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status21TotalAmount.ToString("C",nfi)</th>
                   

                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status21-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },

                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status21editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=21&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>

            <div class="tab-pane fade" id="status14" role="tabpanel" aria-labelledby="status14-tab">
                <h3>Status 14 Vehicles</h3>

                @{
                    decimal Status14TotalVehicles = 0;
                    decimal Status14TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status21-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Cost Amount</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                        
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status14Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 14);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status14Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status14TotalVehicles += 1;
                                Status14TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = 0;// vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 14);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                    
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">
                                        <a class="status21editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status14TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status14TotalAmount.ToString("C", nfi)</th>
                           

                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status14-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },

                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status14editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=21&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>

            <div class="tab-pane fade" id="status15" role="tabpanel" aria-labelledby="status15-tab">
                <h3>Status 15 Vehicles</h3>

                @{
                    decimal Status15TotalVehicles = 0;
                    decimal Status15TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status15-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">In Service Miles</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                       
                            <th class="text-center">Acct Inv Amount</th>
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Memo 1</th>
                            <th class="text-center">Memo 2</th>
                            <th class="text-center">Last Service Date</th>
                            <th class="text-center">Last RO Miles</th>
                            <th class="text-center">Recall Status</th>\
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status15Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 15);

                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status15Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status15TotalVehicles += 1;
                                Status15TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 15);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }


                                var recalls = Model.AllOpenRecalls.FindAll(x => x.StockNo.Trim() == vehicle.StockNumber.Trim() && x.VIN.Trim() == vehicle.VIN.Trim());

                                var recallNotes = "";
                                foreach (var recall in recalls)
                                {
                                    recallNotes += recall.Description + ", ";
                                }
                                recallNotes = recallNotes.TrimEnd(' ').TrimEnd(',');

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                  
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">@vehicle.Memo1</td>
                                    <td class="text-center">@vehicle.Memo2</td>
                                    

                                    <td class="text-center">
                                    @if (vehicle.RODate.ToShortDateString() != "1/1/0001" && vehicle.RODate.ToShortDateString() != "1/1/1900")
                                    {
                                        @:@vehicle.RODate.ToShortDateString()
                                        }
                                    </td>
                                    <td class="text-center">@vehicle.ROMiles</td>
                                    <td class="text-center">

                                        <a href="#" data-toggle="tooltip" title="@recallNotes">
                                            @recalls.Count
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        <a class="status15editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status15TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status15TotalAmount.ToString("C", nfi)</th>
                            
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                         
                            <th class="text-center"></th>

                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status15-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },
                                  { type: 'date', targets: [12]}
                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status15editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=21&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>
            <div class="tab-pane fade" id="status20" role="tabpanel" aria-labelledby="status20-tab">
                <h3>Status 20 Vehicles</h3>

                @{
                    decimal Status20TotalVehicles = 0;
                    decimal Status20TotalAmount = 0;
                }
                <table class="table table-responsive table-bordered table-striped" id="status20-vehicles" style="font-size:11px;">
                    <thead>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Loc</th>
                            <th class="text-center">Stock #</th>
                            <th class="text-center">Year</th>
                            <th class="text-center">Make</th>
                            <th class="text-center">Model</th>
                            <th class="text-center">VIN</th>
                            <th class="text-center">Exterior Color</th>
                            <th class="text-center">Mileage</th>
                            <th class="text-center">Cost Amount</th>
                            <th class="text-center">Days in Inventory</th>
                            <th class="text-center">Days at Status</th>
                           
                            <th class="text-center">Title Status</th>
                            <th class="text-center">Notes</th>

                        </tr>
                    </thead>

                    <tbody>
                        @{

                            var status20Vehicles = Model.OtherStatusVehicles.FindAll(x => x.Status == 20);
                            status20Vehicles.AddRange(Model.NewStatus20Vehicles);
                            
                            TotalClearTitle = 0;
                            TotalTitleBank = 0;
                            TotalTitleCustomer = 0;
                            TotalTitleInterco = 0;
                            TotalTitleAuction = 0;
                            TotalLienBank = 0;
                            TotalLienCustomer = 0;
                            TotalOdomCustomer = 0;
                            TotalPOACustomer = 0;
                            TotalPayoffCustomer = 0;
                            TotalOutStateTitle = 0;
                            TotalDupTitle = 0;
                            TotalOther = 0;
                            TotalNoStatus = 0;

                            TotalNoTitleDispose = 0;
                            TotalETitle = 0;

                            foreach (var vehicle in status20Vehicles)
                            {
                                var titleDue = titleStatus.Find(x => x.VIN == vehicle.VIN);

                                var ManagerNoStatus = true;
                                var status = "";

                                if (titleDue != null)
                                {
                                    if (titleDue.ClearTitle)
                                    {
                                        status += "Clear Title, ";
                                        TotalClearTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueBank)
                                    {
                                        status += "Title Bank, ";
                                        TotalTitleBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueCustomer)
                                    {
                                        status += "Title Customer, ";
                                        TotalTitleCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueInterco)
                                    {
                                        status += "Title Interco, ";
                                        TotalTitleInterco += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.TitleDueAuction)
                                    {
                                        status += "Title Auction, ";
                                        TotalTitleAuction += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.LienDueBank)
                                    {
                                        status += "Lien Bank, ";
                                        TotalLienBank += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.LienDueCustomer)
                                    {
                                        status += "Lien Customer, ";
                                        TotalLienCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.OdomDueCustomer)
                                    {
                                        status += "Odom Customer, ";
                                        TotalOdomCustomer += 1;
                                        ManagerNoStatus = false;
                                    }

                                    if (titleDue.POADueCust)
                                    {
                                        status += "POA Due, ";
                                        TotalPOACustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.PayoffDueCust)
                                    {
                                        status += "Payoff Due, ";
                                        TotalPayoffCustomer += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.WaitingOutSTTitle)
                                    {
                                        status += "Waiting Out, ";
                                        TotalOutStateTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.DuplicateTitleAppliedFor)
                                    {
                                        status += "Dup Title, ";
                                        TotalDupTitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.Other)
                                    {
                                        status += "Other, ";
                                        TotalOther += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.NoTitleDispose)
                                    {
                                        status += "No Title Dispose, ";
                                        TotalNoTitleDispose += 1;
                                        ManagerNoStatus = false;
                                    }
                                    if (titleDue.ElectronicTitle)
                                    {
                                        status += "E-Title, ";
                                        TotalETitle += 1;
                                        ManagerNoStatus = false;
                                    }
                                }

                                if (ManagerNoStatus)
                                {
                                    status = "No Status";
                                    TotalNoStatus += 1;
                                }
                                status = status.TrimEnd(' ').TrimEnd(',');

                                Status20TotalVehicles += 1;
                                Status20TotalAmount += vehicle.CostAmount;

                                var titleLink = "http://jjfserver/SalesCommission/Reports/UpdateTitleDue?vin=" + vehicle.VIN;
                                if (ManagerNoStatus)
                                {
                                    titleLink = "http://jjfserver/SalesCommission/Reports/AddTitleDue?vin=" + vehicle.VIN;
                                }

                                var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                var statusChangeDate = new DateTime();

                                foreach (var hist in invHistory)
                                {
                                    if (hist.status != vehicle.Status)
                                    {
                                        statusChangeDate = hist.updated;
                                        break;
                                    }
                                }

                                Int32 invStatusDays = 0;
                                if (statusChangeDate == new DateTime())
                                {
                                    invStatusDays = vehicle.DaysInventory;
                                }
                                else
                                {
                                    invStatusDays = (Int32)(DateTime.Now - statusChangeDate).TotalDays;
                                }

                                var vehicleNotes = Model.AllVehicleNotes.Find(x => x.VIN == vehicle.VIN && x.InventoryStatus == 20);
                                var Notes = "";

                                if (vehicleNotes != null)
                                {
                                    Notes = vehicleNotes.Notes;
                                }

                                <tr>
                                    <td class="text-center">@vehicle.Location</td>
                                    <td class="text-center">@vehicle.StockNumber</td>
                                    <td class="text-center">@vehicle.ModelYear</td>
                                    <td class="text-center">@vehicle.Make</td>
                                    <td class="text-center">@vehicle.Model</td>
                                    <td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>
                                    <td class="text-center">@vehicle.Miles</td>
                                    <td class="text-center">@vehicle.CostAmount.ToString("C", nfi)</td>
                                    <td class="text-center">@vehicle.DaysInventory</td>
                                    <td class="text-center">@invStatusDays</td>
                                  
                                    <td class="text-center"><a href="@titleLink" target="blank">@status</a></td>
                                    <td class="text-center">
                                        <a class="status20editInfo" data-vin="@vehicle.VIN" data-stock="@vehicle.StockNumber"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a><br />
                                        @if (Notes != null && Notes != "")
                                        {
                                            <a href="#" data-toggle="tooltip" title="@Notes">
                                                <i class="fa fa-comments-o" aria-hidden="true"></i>
                                            </a>
                                        }
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="background-color:#d9edf7">
                            <th class="text-center">Totals</th>
                            <th class="text-center">@Status20TotalVehicles</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center">@Status20TotalAmount.ToString("C", nfi)</th>
                   

                            <th class="text-right" colspan="3">
                                ClearTitle<br />
                                Title Due Bank<br />
                                Title Due Customer<br />
                                Title Due Interco<br />
                                Title Due Auction<br />
                                Lien Due Bank<br />
                                Lien Due Customer<br />
                                Odom Due Customer<br />
                                POA Due Customer<br />
                                Payoff Due Customer<br />
                                Out of State Title<br />
                                Duplicate Title<br />
                                No Title Dispose<br />
                                E-Title<br />
                                Other<br />
                                No Status<br />
                            </th>
                            <th class="text-center">
                                @TotalClearTitle<br />
                                @TotalTitleBank<br />
                                @TotalTitleCustomer<br />
                                @TotalTitleInterco<br />
                                @TotalTitleAuction<br />
                                @TotalLienBank<br />
                                @TotalLienCustomer<br />
                                @TotalOdomCustomer<br />
                                @TotalPOACustomer<br />
                                @TotalPayoffCustomer<br />
                                @TotalOutStateTitle<br />
                                @TotalDupTitle<br />
                                @TotalNoTitleDispose<br />
                                @TotalETitle<br />
                                @TotalOther<br />
                                @TotalNoStatus<br />
                            </th>
                        </tr>
                    </tfoot>
                </table>

                <script type="text/javascript">
                        $(document).ready(function () {
                            $('#status20-vehicles').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [ 7, 8, 9, 10] },
                                ]

                            });
                        });
                        $(document).ready(function () {

                            $('[data-toggle="tooltip"]').tooltip();

                            var dialogWidth = 0;

                            dialogWidth = ($(window).width() * .75);

                            if ($(window).width() > 1199) {
                                dialogWidth = 1200;
                            }

                            $('body').on('click', '.status20editInfo', function (event) {
                                var vin = $(this).attr("data-vin");

                                var url = "@applicationPath/Home/VehicleNotes/?status=21&vin=" + vin;
                                var dialogBox = $("<div>");

                                $(dialogBox).dialog({
                                    resizable: false,
                                    height: "auto",
                                    width: dialogWidth,
                                    position: { my: "center", at: "top+25%", of: window },
                                    title: 'Update Vehicle Notes',
                                    modal: true,
                                    open: function (event, ui) {
                                        $(this).load(url);
                                        //$('#BonusDraws').validate();
                                    },
                                    buttons: {
                                        "Save": function () {
                                            var $this = this;
                                            var form = $('#UpdateVehicleNotes', $this);
                                            //if (!$(form).valid()) {
                                            //    return false;
                                            //}

                                            $.ajax({
                                                async: false,
                                                type: 'POST',
                                                url: form.attr("action"),
                                                data: $(form).serialize(),
                                                success: $($this).dialog("close").dialog("destroy").remove()
                                            });

                                            //location.reload();
                                        },

                                        "Close": function () {
                                            $(this).dialog("close");
                                            $(this).empty();
                                        }
                                    }
                                });
                                $(dialogBox).dialog('open');
                            });
                        });
                </script>

            </div>
            <div class="tab-pane fade" id="all" role="tabpanel" aria-labelledby="all-tab">
                <h3>All Inventory as of @reportDate.ToShortDateString()</h3>

                @{
                    var AllVehicles = Model.UsedVehicles;


                    decimal AllListAmountTotal = 0;
                    decimal AllCostAmountTotal = 0;
                    decimal AllNewListAmountTotal = 0;
                    decimal AllDiffToMarketAmountTotal = 0;

                    decimal AllNewCostAmountTotal = 0;
                    decimal AllWDAmountTotal = 0;
                    decimal AllWDPercentTotal = 0;

                    decimal AllOrigProfitTotal = 0;
                    decimal AllWDProfitTotal = 0;

                    decimal AllVehicleWDProfitTotal = 0;
                    decimal AllVehicleSLProfitTotal = 0;
                    decimal AllRetailWDProfitTotal = 0;
                    decimal AllRetailSLProfitTotal = 0;
                    decimal AllTransferWDProfitTotal = 0;
                    decimal AllTransferSLProfitTotal = 0;

                    int AllSoldCount = 0;
                    int AllTransferCount = 0;
                    int AllWDCount = 0;
                    decimal AllSoldAmountTotal = 0;
                    decimal AllVehicleProfitTotal = 0;
                    decimal AllVehicleLossTotal = 0;

                    int AllDaysTotal = 0;
                    int AllPriceTotal = 0;
                    int AllVehicleCount = 0;

                    decimal AllRetailProfitTotal = 0;
                    decimal AllTransferProfitTotal = 0;

                    decimal AllTotalRetailPVR = 0;
                    decimal AllTotalTransferPVR = 0;


                    var AlllistAmountDate = new DateTime(Model.YearId, Model.MonthId, 1);

                    <table class="table table-responsive table-bordered table-striped" id="vehicleListing-all" style="font-size:11px;">
                        <thead>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">Loc</th>
                                <th class="text-center">Stock #</th>
                                <th class="text-center">Year</th>
                                <th>Make</th>
                                <th>Model</th>
                                @*<th>VIN</th>
                            <th>Exterior Color</th>*@
                                <th class="text-center">All Days in Inv</th>
                                <th class="text-center">Days at Location</th>
                                <th class="text-center">Mileage</th>

                                <th>Orig Inv Amt</th>
                                <th>List Amt<br />(@AlllistAmountDate.ToShortDateString())</th>

                                <th>New Inv Amt<br />(@DateTime.Now.ToShortDateString())</th>
                                <th>WD Amt</th>
                                <th>WD %</th>
                                <th>Current FitzWay Price</th>
                                <th>Days at Price</th>
                                <th>FE profit at Original Amount based on current FW Low Price</th>
                                <th>FE profit at WD Amount based on current FW Low Price</th>
                                <th>Status</th>
                                <th>Customer Name or Transferred Store</th>
                                <th>Sell Price</th>
                                @*<th>Sold Loc</th>*@
                                <th>Sold Date</th>
                                @*<th>Total PVR</th>*@
                                <th>FE profit at Original Amount</th>
                                <th>FE profit at Write Down Amount</th>
                                <th>Sales Log Deal Gross</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (AllVehicles != null)
                            {
                                AllVehicleCount = AllVehicles.Count;

                                foreach (var vehicle in AllVehicles)
                                {

                                    var diffToMarket = vehicle.NewListAmount - vehicle.CostAmount;
                                    AllDaysTotal += vehicle.DaysInventory;

                                    AllListAmountTotal += vehicle.ListAmount;
                                    AllCostAmountTotal += vehicle.CostAmount;
                                    AllNewListAmountTotal += vehicle.NewListAmount;
                                    AllDiffToMarketAmountTotal += diffToMarket;


                                    decimal CurrentInvAmount = 0;
                                    decimal WriteDownAmount = 0;
                                    decimal WriteDownPercent = 0;

                                    var DaysAtPrice = 0;
                                    decimal ProfitOrigInvAmount = 0;
                                    decimal ProfitCurrentInvAmount = 0;

                                    decimal vehicleProfit = 0;
                                    decimal vehicleProfitWD = 0;

                                    var backgroundColor = "";
                                    var profitbackgroundColor = "";
                                    var bTransfer = false;

                                    if (vehicle.IsSold)
                                    {
                                        vehicleProfit = vehicle.SellPrice - vehicle.CostAmount;
                                        vehicleProfitWD = vehicle.SellPrice - vehicle.CurrentInvAmount;

                                        AllVehicleProfitTotal += vehicleProfit;
                                        AllVehicleWDProfitTotal += vehicleProfitWD;
                                        AllVehicleSLProfitTotal += vehicle.TotalPVR;

                                        backgroundColor = "style=background-color:#b7e1cd";
                                        profitbackgroundColor = "style=background-color:#b7e1cd";

                                        if (vehicleProfit < 0)
                                        {
                                            AllVehicleLossTotal += vehicleProfit;
                                            backgroundColor = "style=background-color:#f4c7c3";
                                            profitbackgroundColor = "style=background-color:#f4c7c3";
                                        }

                                        if (vehicle.CustomerName != null && vehicle.CustomerName.StartsWith("Transfer"))
                                        {
                                            backgroundColor = "style=background-color:#ebe4be";
                                            AllTransferCount += 1;
                                            bTransfer = true;
                                            AllTransferProfitTotal += vehicleProfit;
                                            AllTransferWDProfitTotal += vehicleProfitWD;
                                            AllTransferSLProfitTotal += vehicle.TotalPVR;

                                            AllTotalTransferPVR += vehicle.TotalPVR;
                                        }
                                        else
                                        {
                                            AllSoldCount += 1;
                                            AllSoldAmountTotal += vehicle.SellPrice;
                                            AllRetailProfitTotal += vehicleProfit;
                                            AllRetailWDProfitTotal += vehicleProfitWD;
                                            AllRetailSLProfitTotal += vehicle.TotalPVR;

                                            AllTotalRetailPVR += vehicle.TotalPVR;
                                        }

                                    }


                                    var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                    var priceChangeDate = new DateTime();

                                    foreach (var hist in invHistory)
                                    {
                                        if (hist.list_amt != vehicle.ListAmount)
                                        {
                                            priceChangeDate = hist.updated;
                                            break;
                                        }
                                    }


                                    if (priceChangeDate == new DateTime())
                                    {
                                        DaysAtPrice = vehicle.DaysInventory;
                                    }
                                    else
                                    {
                                        DaysAtPrice = (Int32)(DateTime.Now - priceChangeDate).TotalDays;
                                    }

                                    AllPriceTotal += DaysAtPrice;
                                    //If(vehicle.CurrentInvAmount

                                    ProfitOrigInvAmount = vehicle.NewListAmount - vehicle.CostAmount;
                                    CurrentInvAmount = vehicle.CurrentInvAmount;
                                    ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;

                                    if (vehicle.CurrentInvAmount > 0 && vehicle.CurrentInvAmount != vehicle.CostAmount)
                                    {

                                        //ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;
                                        WriteDownAmount = ((vehicle.CostAmount - CurrentInvAmount) * -1);
                                        WriteDownPercent = ((1 - (CurrentInvAmount / vehicle.CostAmount)));
                                        AllWDCount += 1;
                                    }
                                    <tr>
                                        <td class="text-center" @backgroundColor>@vehicle.Location</td>
                                        <td class="text-center" @backgroundColor><a href="https://www.fitzmall.com/Inventory/Detail/@vehicle.XrefId" target="_blank">@vehicle.StockNumber</a></td>
                                        <td class="text-center" @backgroundColor>@vehicle.ModelYear</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Make</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Model</td>
                                        @*<td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>*@
                                        <td class="text-center" @backgroundColor>@vehicle.DaysInventory</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Days4008</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Miles</td>

                                        <td class="text-center" @backgroundColor>@vehicle.CostAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@vehicle.ListAmount.ToString("C", nfi)</td>

                                        <td class="text-center" @backgroundColor>@CurrentInvAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@WriteDownAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@WriteDownPercent.ToString("P", nfi)</td>

                                        <td class="text-center" @backgroundColor>@vehicle.NewListAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@DaysAtPrice</td>
                                        
                                        @if(!bTransfer && !vehicle.IsSold)
                                        {
                                            <td class="text-center" @backgroundColor>@ProfitOrigInvAmount.ToString("C", nfi)</td>
                                            <td class="text-center" @backgroundColor>@ProfitCurrentInvAmount.ToString("C", nfi)</td>
                                        }
                                        else
                                        {
                                            <td class="text-center" @backgroundColor></td>
                                            <td class="text-center" @backgroundColor></td>
                                        }

                                        @if (vehicle.IsSold)
                                        {
                                            <td class="text-center" @backgroundColor>@vehicle.Status <a href="http://jjfserver/SalesCommission/Sales/DealDetail/@vehicle.DealNumber" target="_blank">(SOLD)</a></td>
                                                    <td class="text-center" @backgroundColor>@vehicle.CustomerName</td>
                                                    <td class="text-center" @backgroundColor>@vehicle.SellPrice.ToString("C", nfi)</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.SoldLocation</td>*@
                                                    <td class="text-center" @backgroundColor>@vehicle.SoldDate.ToShortDateString()</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>*@

                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfit.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfitWD.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>
                                        }
                                        else
                                        {
                                            <td class="text-center" @backgroundColor>@vehicle.Status</td>
                                                    <td class="text-center" @backgroundColor></td>
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                        }
                                    </tr>

                                    AllNewCostAmountTotal += CurrentInvAmount;
                                    AllWDAmountTotal += WriteDownAmount;

                                    if (!bTransfer && !vehicle.IsSold)
                                    {
                                        AllOrigProfitTotal += ProfitOrigInvAmount;
                                        AllWDProfitTotal += ProfitCurrentInvAmount;
                                    }


                                    AllWDPercentTotal += WriteDownPercent;
                                }
                            }
                        </tbody>
                        @{

                            var AllaverageDays = 0;
                            if (AllVehicleCount > 0)
                            {
                                AllaverageDays = AllDaysTotal / AllVehicleCount;
                            }
                            else
                            {
                                AllaverageDays = 0;
                            }


                            var AllprofitIndicator = "";
                            var AlllossIndicator = "";

                            if (AllVehicleProfitTotal < 0)
                            {
                                AllprofitIndicator = "style=color:red";
                            }

                            if (AllVehicleLossTotal < 0)
                            {
                                AlllossIndicator = "style=color:red";
                            }

                            var AllVehicleTotalPVR = (AllTotalRetailPVR + AllTotalTransferPVR); // / (AllSoldCount + AllTransferCount);
                            var AllVehicleRetailTotalPVR = (AllTotalRetailPVR); // / AllSoldCount);
                            var AllVehicleTransferTotalPVR = (AllTotalTransferPVR); // /AllTransferCount);

                            decimal avgAllVehicleProfit = 0;
                            decimal avgAllTransferVehicleProfit = 0;
                            decimal avgAllRetailVehicleProfit = 0;

                            decimal avgAllVehicleWDProfit = 0;
                            decimal avgAllTransferVehicleWDProfit = 0;
                            decimal avgAllRetailVehicleWDProfit = 0;

                            decimal avgAllVehicleSLProfit = 0;
                            decimal avgAllTransferVehicleSLProfit = 0;
                            decimal avgAllRetailVehicleSLProfit = 0;

                            if ((AllSoldCount + AllTransferCount) > 0)
                            {
                                avgAllVehicleProfit = (AllVehicleProfitTotal / (AllSoldCount + AllTransferCount));
                                avgAllVehicleWDProfit = (AllVehicleWDProfitTotal / (AllSoldCount + AllTransferCount));
                                avgAllVehicleSLProfit = (AllVehicleSLProfitTotal / (AllSoldCount + AllTransferCount));
                            }
                            if (AllTransferCount > 0)
                            {
                                avgAllTransferVehicleProfit = (AllTransferProfitTotal / (AllTransferCount));
                                avgAllTransferVehicleWDProfit = (AllTransferWDProfitTotal / (AllTransferCount));
                                avgAllTransferVehicleSLProfit = (AllTransferSLProfitTotal / (AllTransferCount));

                            }
                            if (AllSoldCount > 0)
                            {
                                avgAllRetailVehicleProfit = (AllRetailProfitTotal / (AllSoldCount));
                                avgAllRetailVehicleWDProfit = (AllRetailWDProfitTotal / (AllSoldCount));
                                avgAllRetailVehicleSLProfit = (AllRetailSLProfitTotal / (AllSoldCount));
                            }

                        }
                        <tfoot>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">Totals</th>
                                <th class="text-center">Units:</th>
                                <th class="text-center">@AllVehicleCount</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">@AllCostAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@AllListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@AllNewCostAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@AllWDAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center"></th>

                                <th class="text-center">@AllNewListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center"></th>
                                <th class="text-center">@AllOrigProfitTotal.ToString("C", nfi)</th>
                                <th class="text-center">@AllWDProfitTotal.ToString("C", nfi)</th>

                                <th class="text-center">Sold: @AllSoldCount</th>
                                <th class="text-center">Transfers: @AllTransferCount</th>
                                <th class="text-center">@AllSoldAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">All:</th>
                                @*<th class="text-center">@AllVehicleTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @AllprofitIndicator>@AllVehicleProfitTotal.ToString("C", nfi)<br />@avgAllVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center" @AllprofitIndicator>@AllVehicleWDProfitTotal.ToString("C", nfi)<br />@avgAllVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center" @AllprofitIndicator>@AllVehicleSLProfitTotal.ToString("C", nfi)<br />@avgAllVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="20"></th>
                                <th class="text-center">Retail:</th>
                                @*<th class="text-center">@AllVehicleRetailTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @AlllossIndicator>@AllRetailProfitTotal.ToString("C", nfi)<br />@avgAllRetailVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center">@AllRetailWDProfitTotal.ToString("C", nfi)<br />@avgAllRetailVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center">@AllRetailSLProfitTotal.ToString("C", nfi)<br />@avgAllRetailVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="20"></th>
                                <th class="text-center">Transfers:</th>
                                @*<th class="text-center">@AllVehicleTransferTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @AlllossIndicator>@AllTransferProfitTotal.ToString("C", nfi)<br />@avgAllTransferVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center">@AllTransferWDProfitTotal.ToString("C", nfi)<br />@avgAllTransferVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center">@AllTransferSLProfitTotal.ToString("C", nfi)<br />@avgAllTransferVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>

                            @{
                                decimal avgAllInvAmount = 0;
                                decimal avgAllListAmount = 0;
                                decimal avgAllNewInvAmount = 0;
                                decimal avgAllNewListAmount = 0;

                                decimal avgAllWDAmount = 0;
                                decimal avgAllWDPercent = 0;
                                decimal avgAllPriceDays = 0;

                                decimal avgAllOrigProfit = 0;
                                decimal avgAllWDProfit = 0;

                                avgAllInvAmount = (AllCostAmountTotal / AllVehicleCount);
                                avgAllListAmount = (AllListAmountTotal / AllVehicleCount);
                                avgAllNewInvAmount = (AllNewCostAmountTotal / (AllVehicleCount - AllSoldCount));
                                avgAllNewListAmount = (AllNewListAmountTotal / AllVehicleCount);
                                if (AllWDCount > 0)
                                {
                                    avgAllWDAmount = (AllWDAmountTotal / AllWDCount);
                                    avgAllWDPercent = (AllWDPercentTotal / AllWDCount);
                                }
                                avgAllOrigProfit = (AllOrigProfitTotal / AllVehicleCount);
                                avgAllWDProfit = (AllWDProfitTotal / AllVehicleCount);

                                avgAllPriceDays = (AllPriceTotal / AllVehicleCount);

                            }
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">Averages</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">Avg Days:</th>
                                <th class="text-center">@AllaverageDays</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">@avgAllInvAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllListAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllNewInvAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllWDAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllWDPercent.ToString("P", nfi)</th>
                                <th class="text-center">@avgAllNewListAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllPriceDays</th>
                                <th class="text-center">@avgAllOrigProfit.ToString("C", nfi)</th>
                                <th class="text-center">@avgAllWDProfit.ToString("C", nfi)</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center" colspan="4"></th>
                                @*<th class="text-center" colspan="2">Loss:</th>
                                <th class="text-center" @AlllossIndicator>@AllVehicleLossTotal.ToString("C", nfi)</th>*@

                            </tr>
                        </tfoot>
                    </table>

                }
            </div>
            <script type="text/javascript">
                        $(document).ready(function () {
                            $('#vehicleListing-all').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [8, 9, 10, 11, 13, 15] },

                                ]

                            });
                        });

            </script>
            <div class="tab-pane fade" id="transfers" role="tabpanel" aria-labelledby="transfers-tab">
                <h3>Transferred Inventory as of @reportDate.ToShortDateString()</h3>

                @{
                    var transfersVehicles = Model.TransferredVehicles;


                    decimal transfersListAmountTotal = 0;
                    decimal transfersCostAmountTotal = 0;
                    decimal transfersNewListAmountTotal = 0;
                    decimal transfersDiffToMarketAmountTotal = 0;

                    decimal transfersNewCostAmountTotal = 0;
                    decimal transfersWDAmountTotal = 0;
                    decimal transfersWDPercentTotal = 0;

                    decimal transfersOrigProfitTotal = 0;
                    decimal transfersWDProfitTotal = 0;

                    int transfersSoldCount = 0;
                    int transfersTransferCount = 0;
                    int transfersWDCount = 0;
                    decimal transfersSoldAmountTotal = 0;
                    decimal transfersVehicleProfitTotal = 0;
                    decimal transfersVehicleLossTotal = 0;

                    int transfersDaysTotal = 0;
                    int transfersPriceTotal = 0;
                    int transfersVehicleCount = 0;

                    decimal transfersRetailProfitTotal = 0;
                    decimal transfersTransferProfitTotal = 0;

                    decimal transfersVehicleWDProfitTotal = 0;
                    decimal transfersVehicleSLProfitTotal = 0;
                    decimal transfersRetailWDProfitTotal = 0;
                    decimal transfersRetailSLProfitTotal = 0;
                    decimal transfersTransferWDProfitTotal = 0;
                    decimal transfersTransferSLProfitTotal = 0;

                    decimal TransferTotalRetailPVR = 0;
                    decimal TransferTotalTransferPVR = 0;


                    var transferslistAmountDate = new DateTime(Model.YearId, Model.MonthId, 1);

                    <table class="table table-responsive table-bordered table-striped" id="vehicleListing-transfers" style="font-size:11px;">
                        <thead>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">New Location</th>
                                <th class="text-center">Transfer From</th>
                                <th class="text-center">Stock #</th>
                                <th class="text-center">Year</th>
                                <th>Make</th>
                                <th>Model</th>
                                @*<th>VIN</th>
                            <th>Exterior Color</th>*@
                                <th class="text-center">All Days in Inv</th>
                                <th class="text-center">Days at Location</th>
                                <th class="text-center">Mileage</th>

                                <th>Orig Inv Amt</th>
                                <th>List Amt<br />(@transferslistAmountDate.ToShortDateString())</th>

                                <th>New Inv Amt<br />(@DateTime.Now.ToShortDateString())</th>
                                <th>WD Amt</th>
                                <th>WD %</th>
                                <th>Current FitzWay Price</th>
                                <th>Days at Price</th>
                                <th>FE profit at Original Amount based on current FW Low Price</th>
                                <th>FE profit at WD Amount based on current FW Low Price</th>

                                <th>Status</th>
                                <th>Customer Name or Transferred Store</th>
                                <th>Sell Price</th>
                                @*<th>Sold Loc</th>*@
                                <th>Sold Date</th>
                                @*<th>Total PVR</th>*@
                                <th>FE profit at Original Amount</th>
                                <th>FE profit at Write Down Amount</th>
                                <th>Sales Log Deal Gross</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (transfersVehicles != null)
                            {
                                transfersVehicleCount = transfersVehicles.Count;

                                foreach (var vehicle in transfersVehicles)
                                {

                                    var diffToMarket = vehicle.NewListAmount - vehicle.CostAmount;
                                    transfersDaysTotal += vehicle.DaysInventory;

                                    transfersListAmountTotal += vehicle.ListAmount;
                                    transfersCostAmountTotal += vehicle.CostAmount;
                                    transfersNewListAmountTotal += vehicle.NewListAmount;
                                    transfersDiffToMarketAmountTotal += diffToMarket;


                                    decimal CurrentInvAmount = 0;
                                    decimal WriteDownAmount = 0;
                                    decimal WriteDownPercent = 0;

                                    var DaysAtPrice = 0;
                                    decimal ProfitOrigInvAmount = 0;
                                    decimal ProfitCurrentInvAmount = 0;

                                    decimal vehicleProfit = 0;
                                    decimal vehicleProfitWD = 0;

                                    var backgroundColor = "";
                                    var profitbackgroundColor = "";
                                    var bTransfer = false;

                                    if (vehicle.IsSold)
                                    {
                                        vehicleProfit = vehicle.SellPrice - vehicle.CostAmount;
                                        vehicleProfitWD = vehicle.SellPrice - vehicle.CurrentInvAmount;

                                        transfersVehicleProfitTotal += vehicleProfit;
                                        transfersVehicleWDProfitTotal += vehicleProfitWD;
                                        transfersVehicleSLProfitTotal += vehicle.TotalPVR;

                                        //backgroundColor = "style=background-color:#b7e1cd";
                                        //profitbackgroundColor = "style=background-color:#b7e1cd";

                                        if (vehicleProfit < 0)
                                        {
                                            transfersVehicleLossTotal += vehicleProfit;
                                            //backgroundColor = "style=background-color:#f4c7c3";
                                            //profitbackgroundColor = "style=background-color:#f4c7c3";
                                        }

                                        if (vehicle.CustomerName != null && vehicle.CustomerName.StartsWith("Transfer"))
                                        {
                                            //backgroundColor = "style=background-color:#ebe4be";
                                            transfersTransferCount += 1;
                                            bTransfer = true;
                                            transfersTransferProfitTotal += vehicleProfit;
                                            transfersTransferWDProfitTotal += vehicleProfitWD;
                                            transfersTransferSLProfitTotal += vehicle.TotalPVR;

                                            TransferTotalTransferPVR += vehicle.TotalPVR;
                                        }
                                        else
                                        {
                                            transfersSoldCount += 1;
                                            transfersSoldAmountTotal += vehicle.SellPrice;
                                            transfersRetailProfitTotal += vehicleProfit;
                                            TransferTotalRetailPVR += vehicle.TotalPVR;

                                            transfersRetailWDProfitTotal += vehicleProfitWD;
                                            transfersRetailSLProfitTotal += vehicle.TotalPVR;

                                        }

                                    }


                                    var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                    var priceChangeDate = new DateTime();

                                    foreach (var hist in invHistory)
                                    {
                                        if (hist.list_amt != vehicle.ListAmount)
                                        {
                                            priceChangeDate = hist.updated;
                                            break;
                                        }
                                    }


                                    if (priceChangeDate == new DateTime())
                                    {
                                        DaysAtPrice = vehicle.DaysInventory;
                                    }
                                    else
                                    {
                                        DaysAtPrice = (Int32)(DateTime.Now - priceChangeDate).TotalDays;
                                    }

                                    transfersPriceTotal += DaysAtPrice;
                                    //If(vehicle.CurrentInvAmount

                                    ProfitOrigInvAmount = vehicle.NewListAmount - vehicle.CostAmount;
                                    ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;

                                    CurrentInvAmount = vehicle.CurrentInvAmount;

                                    if (vehicle.CurrentInvAmount > 0 && vehicle.CurrentInvAmount != vehicle.CostAmount)
                                    {

                                        //ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;
                                        WriteDownAmount = ((vehicle.CostAmount - CurrentInvAmount) * -1);
                                        WriteDownPercent = ((1 - (CurrentInvAmount / vehicle.CostAmount)));
                                        transfersWDCount += 1;
                                    }
                                    <tr>
                                        <td class="text-center" @backgroundColor>@vehicle.CurrentLocation</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Location</td>
                                        <td class="text-center" @backgroundColor><a href="https://www.fitzmall.com/Inventory/Detail/@vehicle.XrefId" target="_blank">@vehicle.StockNumber</a></td>
                                        <td class="text-center" @backgroundColor>@vehicle.ModelYear</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Make</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Model</td>
                                        @*<td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>*@
                                        <td class="text-center" @backgroundColor>@vehicle.DaysInventory</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Days4008</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Miles</td>

                                        <td class="text-center" @backgroundColor>@vehicle.CostAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@vehicle.ListAmount.ToString("C", nfi)</td>

                                        <td class="text-center" @backgroundColor>@CurrentInvAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@WriteDownAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@WriteDownPercent.ToString("P", nfi)</td>

                                        <td class="text-center" @backgroundColor>@vehicle.NewListAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@DaysAtPrice</td>

                                        @if (!bTransfer && !vehicle.IsSold)
                                        {
                                            <td class="text-center" @backgroundColor>@ProfitOrigInvAmount.ToString("C", nfi)</td>
                                            <td class="text-center" @backgroundColor>@ProfitCurrentInvAmount.ToString("C", nfi)</td>
                                        }
                                        else
                                        {
                                            <td class="text-center" @backgroundColor></td>
                                            <td class="text-center" @backgroundColor></td>
                                        }

                                        @if (vehicle.IsSold)
                                        {
                                            <td class="text-center" @backgroundColor>@vehicle.Status <a href="http://jjfserver/SalesCommission/Sales/DealDetail/@vehicle.DealNumber" target="_blank">(SOLD)</a></td>
                                            <td class="text-center" @backgroundColor>@vehicle.CustomerName</td>
                                                    <td class="text-center" @backgroundColor>@vehicle.SellPrice.ToString("C", nfi)</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.SoldLocation</td>*@
                                                    <td class="text-center" @backgroundColor>@vehicle.SoldDate.ToShortDateString()</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>*@
                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfit.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfitWD.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>
                                        }
                                        else
                                        {
                                            <td class="text-center" @backgroundColor>@vehicle.Status</td>
                                            <td class="text-center" @backgroundColor></td>
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                        }
                                    </tr>

                                    transfersNewCostAmountTotal += CurrentInvAmount;
                                    transfersWDAmountTotal += WriteDownAmount;

                                    if (!bTransfer && !vehicle.IsSold)
                                    {
                                        transfersOrigProfitTotal += ProfitOrigInvAmount;
                                        transfersWDProfitTotal += ProfitCurrentInvAmount;
                                    }


                                    transfersWDPercentTotal += WriteDownPercent;
                                }
                            }
                        </tbody>
                        @{

                            var transfersaverageDays = 0;
                            if (transfersVehicleCount > 0)
                            {
                                transfersaverageDays = transfersDaysTotal / transfersVehicleCount;
                            }
                            else
                            {
                                transfersaverageDays = 0;
                            }


                            var transfersprofitIndicator = "";
                            var transferslossIndicator = "";

                            if (transfersVehicleProfitTotal < 0)
                            {
                                transfersprofitIndicator = "style=color:red";
                            }

                            if (transfersVehicleLossTotal < 0)
                            {
                                transferslossIndicator = "style=color:red";
                            }

                            var TransferVehicleTotalPVR = (TransferTotalRetailPVR + TransferTotalTransferPVR); // / (AllSoldCount + AllTransferCount);
                            var TransferVehicleRetailTotalPVR = (TransferTotalRetailPVR); // / AllSoldCount);
                            var TransferVehicleTransferTotalPVR = (TransferTotalTransferPVR); // /AllTransferCount);

                            decimal avgtransfersVehicleProfit = 0;
                            decimal avgtransfersTransferVehicleProfit = 0;
                            decimal avgtransfersRetailVehicleProfit = 0;

                            decimal avgtransfersVehicleWDProfit = 0;
                            decimal avgtransfersTransferVehicleWDProfit = 0;
                            decimal avgtransfersRetailVehicleWDProfit = 0;

                            decimal avgtransfersVehicleSLProfit = 0;
                            decimal avgtransfersTransferVehicleSLProfit = 0;
                            decimal avgtransfersRetailVehicleSLProfit = 0;

                            if ((transfersSoldCount + transfersTransferCount) > 0)
                            {
                                avgtransfersVehicleProfit = (transfersVehicleProfitTotal / (transfersSoldCount + transfersTransferCount));
                                avgtransfersVehicleWDProfit = (transfersVehicleWDProfitTotal / (transfersSoldCount + transfersTransferCount));
                                avgtransfersVehicleSLProfit = (transfersVehicleSLProfitTotal / (transfersSoldCount + transfersTransferCount));
                            }
                            if (transfersTransferCount > 0)
                            {
                                avgtransfersTransferVehicleProfit = (transfersTransferProfitTotal / (transfersTransferCount));
                                avgtransfersTransferVehicleWDProfit = (transfersTransferWDProfitTotal / (transfersTransferCount));
                                avgtransfersTransferVehicleSLProfit = (transfersTransferSLProfitTotal / (transfersTransferCount));

                            }
                            if (transfersSoldCount > 0)
                            {
                                avgtransfersRetailVehicleProfit = (transfersRetailProfitTotal / (transfersSoldCount));
                                avgtransfersRetailVehicleWDProfit = (transfersRetailWDProfitTotal / (transfersSoldCount));
                                avgtransfersRetailVehicleSLProfit = (transfersRetailSLProfitTotal / (transfersSoldCount));
                            }

                        }
                        <tfoot>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="2">Totals</th>
                                <th class="text-center">Units:</th>
                                <th class="text-center">@transfersVehicleCount</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">@transfersCostAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@transfersListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@transfersNewCostAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@transfersWDAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center"></th>

                                <th class="text-center">@transfersNewListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center"></th>
                                <th class="text-center">@transfersOrigProfitTotal.ToString("C", nfi)</th>
                                <th class="text-center">@transfersWDProfitTotal.ToString("C", nfi)</th>

                                <th class="text-center">Sold: @transfersSoldCount</th>
                                <th class="text-center">Transfers: @transfersTransferCount</th>
                                <th class="text-center">@transfersSoldAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">All:</th>
                                @*<th class="text-center">@TransferVehicleTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @transfersprofitIndicator>@transfersVehicleProfitTotal.ToString("C", nfi)<br />@avgtransfersVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center" @transfersprofitIndicator>@transfersVehicleWDProfitTotal.ToString("C", nfi)<br />@avgtransfersVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center" @transfersprofitIndicator>@transfersVehicleSLProfitTotal.ToString("C", nfi)<br />@avgtransfersVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="21"></th>
                                <th class="text-center">Retail:</th>
                                @*<th class="text-center">@TransferVehicleRetailTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @transferslossIndicator>@transfersRetailProfitTotal.ToString("C", nfi)<br />@avgtransfersRetailVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center">@transfersRetailWDProfitTotal.ToString("C", nfi)<br />@avgtransfersRetailVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center">@transfersRetailSLProfitTotal.ToString("C", nfi)<br />@avgtransfersRetailVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="21"></th>
                                <th class="text-center">Transfers:</th>
                                @*<th class="text-center">@TransferVehicleTransferTotalPVR.ToString("C", nfi)</th>*@
                                <th class="text-center" @transferslossIndicator>@transfersTransferProfitTotal.ToString("C", nfi)<br />@avgtransfersTransferVehicleProfit.ToString("C", nfi)</th>
                                <th class="text-center">@transfersTransferWDProfitTotal.ToString("C", nfi)<br />@avgtransfersTransferVehicleWDProfit.ToString("C", nfi)</th>
                                <th class="text-center">@transfersTransferSLProfitTotal.ToString("C", nfi)<br />@avgtransfersTransferVehicleSLProfit.ToString("C", nfi)</th>
                            </tr>

                            @{
                                decimal avgtransfersInvAmount = 0;
                                decimal avgtransfersListAmount = 0;
                                decimal avgtransfersNewInvAmount = 0;
                                decimal avgtransfersNewListAmount = 0;

                                decimal avgtransfersWDAmount = 0;
                                decimal avgtransfersWDPercent = 0;
                                decimal avgtransfersPriceDays = 0;

                                decimal avgtransfersOrigProfit = 0;
                                decimal avgtransfersWDProfit = 0;

                                avgtransfersInvAmount = (transfersCostAmountTotal / transfersVehicleCount);
                                avgtransfersListAmount = (transfersListAmountTotal / transfersVehicleCount);
                                if ((transfersVehicleCount - transfersSoldCount) > 0)
                                {
                                    avgtransfersNewInvAmount = (transfersNewCostAmountTotal / (transfersVehicleCount - transfersSoldCount));
                                }
                                
                                avgtransfersNewListAmount = (transfersNewListAmountTotal / transfersVehicleCount);
                                if (transfersWDCount > 0)
                                {
                                    avgtransfersWDAmount = (transfersWDAmountTotal / transfersWDCount);
                                    avgtransfersWDPercent = (transfersWDPercentTotal / transfersWDCount);
                                }
                                avgtransfersOrigProfit = (transfersOrigProfitTotal / transfersVehicleCount);
                                avgtransfersWDProfit = (transfersWDProfitTotal / transfersVehicleCount);

                                avgtransfersPriceDays = (transfersPriceTotal / transfersVehicleCount);

                            }
                            <tr style="background-color:#d9edf7">
                                <th class="text-center" colspan="2">Averages</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">Avg Days:</th>
                                <th class="text-center">@transfersaverageDays</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">@avgtransfersInvAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersListAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersNewInvAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersWDAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersWDPercent.ToString("P", nfi)</th>
                                <th class="text-center">@avgtransfersNewListAmount.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersPriceDays</th>
                                <th class="text-center">@avgtransfersOrigProfit.ToString("C", nfi)</th>
                                <th class="text-center">@avgtransfersWDProfit.ToString("C", nfi)</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center" colspan="4"></th>
                                @*<th class="text-center" colspan="2">Loss:</th>
                                <th class="text-center" @transferslossIndicator>@transfersVehicleLossTotal.ToString("C", nfi)</th>*@

                            </tr>
                        </tfoot>
                    </table>

                }
            </div>
            <script type="text/javascript">
                        $(document).ready(function () {
                            $('#vehicleListing-transfers').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [8, 9, 10, 11, 13, 15] },

                                ]

                            });
                        });

            </script>
                @foreach (var location in locations)
                {
                    <div class="tab-pane fade" id="@location" role="tabpanel" aria-labelledby="@location-tab">
                        <h3>@location Inventory as of @reportDate.ToShortDateString()</h3>

                        @{
                            var storeVehicles = Model.UsedVehicles.FindAll(x => x.Location == @location);


                            decimal StoreListAmountTotal = 0;
                            decimal StoreCostAmountTotal = 0;
                            decimal StoreNewListAmountTotal = 0;
                            decimal StoreDiffToMarketAmountTotal = 0;

                            decimal StoreNewCostAmountTotal = 0;
                            decimal StoreWDAmountTotal = 0;
                            decimal StoreWDPercentTotal = 0;

                            decimal StoreOrigProfitTotal = 0;
                            decimal StoreWDProfitTotal = 0;

                            int StoreSoldCount = 0;
                            int StoreTransferCount = 0;
                            int StoreWDCount = 0;
                            decimal StoreSoldAmountTotal = 0;

                            decimal StoreVehicleLossTotal = 0;

                            int StoreDaysTotal = 0;
                            int StorePriceTotal = 0;
                            int StoreVehicleCount = 0;

                            decimal StoreRetailProfitTotal = 0;
                            decimal StoreTransferProfitTotal = 0;

                            decimal StoreVehicleProfitTotal = 0;
                            decimal StoreVehicleWDProfitTotal = 0;
                            decimal StoreVehicleSLProfitTotal = 0;
                            decimal StoreRetailWDProfitTotal = 0;
                            decimal StoreRetailSLProfitTotal = 0;
                            decimal StoreTransferWDProfitTotal = 0;
                            decimal StoreTransferSLProfitTotal = 0;


                            decimal TotalRetailPVR = 0;
                            decimal TotalTransferPVR = 0;

                            var listAmountDate = new DateTime(Model.YearId, Model.MonthId, 1);

                            <table class="table table-responsive table-bordered table-striped" id="vehicleListing-@location" style="font-size:11px;">
                                <thead>
                                    <tr style="background-color:#d9edf7">
                                        <th class="text-center">Loc</th>
                                        <th class="text-center">Stock #</th>
                                        <th class="text-center">Year</th>
                                        <th>Make</th>
                                        <th>Model</th>
                                        @*<th>VIN</th>
                                    <th>Exterior Color</th>*@
                                        <th class="text-center">All Days in Inv</th>
                                        <th class="text-center">Days at Location</th>
                                        <th class="text-center">Mileage</th>
                                        
                                        <th>Orig Inv Amt</th>
                                        <th>List Amt<br/>(@listAmountDate.ToShortDateString())</th>
                                        
                                        <th>New Inv Amt<br/>(@DateTime.Now.ToShortDateString())</th>
                                        <th>WD Amt</th>
                                        <th>WD %</th>
                                        <th>Current FitzWay Price</th>
                                        <th>Days at Price</th>
                                        <th>FE profit at Original Amount based on current FW Low Price</th>
                                        <th>FE profit at WD Amount based on current FW Low Price</th>
                                                                                
                                        <th>Status</th>
                                        <th>Customer Name or Transferred Store</th>
                                        <th>Sell Price</th>
                                        @*<th>Sold Loc</th>*@
                                        <th>Sold Date</th>
                                        @*<th>Total PVR</th>*@
                                        <th>FE profit at Original Amount</th>
                                        <th>FE profit at Write Down Amount</th>
                                        <th>Sales Log Deal Gross</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (storeVehicles != null)
                                    {
                                        StoreVehicleCount = storeVehicles.Count;

                                        foreach (var vehicle in storeVehicles)
                                        {

                                            var diffToMarket = vehicle.NewListAmount - vehicle.CostAmount;
                                            StoreDaysTotal += vehicle.DaysInventory;

                                            StoreListAmountTotal += vehicle.ListAmount;
                                            StoreCostAmountTotal += vehicle.CostAmount;
                                            StoreNewListAmountTotal += vehicle.NewListAmount;
                                            StoreDiffToMarketAmountTotal += diffToMarket;


                                            decimal CurrentInvAmount = 0;
                                            decimal WriteDownAmount = 0;
                                            decimal WriteDownPercent = 0;

                                            var DaysAtPrice = 0;
                                            decimal ProfitOrigInvAmount = 0;
                                            decimal ProfitCurrentInvAmount = 0;

                                            decimal vehicleProfit = 0;
                                            decimal vehicleProfitWD = 0;
                                            decimal vehicleProfitSL = 0;

                                            var backgroundColor = "";
                                            var profitbackgroundColor = "";
                                            var bTransfer = false;

                                            if (vehicle.IsSold)
                                            {
                                                backgroundColor = "style=background-color:#b7e1cd";
                                                profitbackgroundColor = "style=background-color:#b7e1cd";
                                                vehicleProfit = vehicle.SellPrice - vehicle.CostAmount;
                                                vehicleProfitWD = vehicle.SellPrice - vehicle.CurrentInvAmount;

                                                StoreVehicleProfitTotal += vehicleProfit;
                                                StoreVehicleWDProfitTotal += vehicleProfitWD;
                                                StoreVehicleSLProfitTotal += vehicle.TotalPVR;

                                                if (vehicleProfit < 0)
                                                {
                                                    StoreVehicleLossTotal += vehicleProfit;
                                                    backgroundColor = "style=background-color:#f4c7c3";
                                                    profitbackgroundColor = "style=background-color:#f4c7c3";
                                                }

                                                if(vehicle.CustomerName != null && vehicle.CustomerName.StartsWith("Transfer"))
                                                {
                                                    backgroundColor = "style=background-color:#ebe4be";
                                                    StoreTransferCount += 1;
                                                    bTransfer = true;
                                                    StoreTransferProfitTotal += vehicleProfit;
                                                    StoreTransferWDProfitTotal += vehicleProfitWD;
                                                    StoreTransferSLProfitTotal += vehicle.TotalPVR;

                                                    TotalTransferPVR += vehicle.TotalPVR;
                                                }
                                                else
                                                {
                                                    StoreSoldCount += 1;
                                                    StoreSoldAmountTotal += vehicle.SellPrice;

                                                    StoreRetailProfitTotal += vehicleProfit;
                                                    StoreRetailWDProfitTotal += vehicleProfitWD;
                                                    StoreRetailSLProfitTotal += vehicle.TotalPVR;

                                                    TotalRetailPVR += vehicle.TotalPVR;
                                                }



                                            }


                                            var invHistory = Model.InventoryStatusHistory.FindAll(x => x.stk.Trim() == vehicle.StockNumber.Trim()).OrderByDescending(x => x.UCHISTID);
                                            var priceChangeDate = new DateTime();

                                            foreach (var hist in invHistory)
                                            {
                                                if (hist.list_amt != vehicle.ListAmount)
                                                {
                                                    priceChangeDate = hist.updated;
                                                    break;
                                                }
                                            }


                                            if (priceChangeDate == new DateTime())
                                            {
                                                DaysAtPrice = vehicle.DaysInventory;
                                            }
                                            else
                                            {
                                                DaysAtPrice = (Int32)(DateTime.Now - priceChangeDate).TotalDays;
                                            }

                                            StorePriceTotal += DaysAtPrice;
                                            //If(vehicle.CurrentInvAmount

                                            ProfitOrigInvAmount = vehicle.NewListAmount - vehicle.CostAmount;
                                            CurrentInvAmount = vehicle.CurrentInvAmount;
                                            ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;

                                            if (vehicle.CurrentInvAmount > 0 && vehicle.CurrentInvAmount != vehicle.CostAmount)
                                            {

                                                //ProfitCurrentInvAmount = vehicle.NewListAmount - CurrentInvAmount;
                                                WriteDownAmount = ((vehicle.CostAmount - CurrentInvAmount) * -1);
                                                WriteDownPercent = ((1 - (CurrentInvAmount / vehicle.CostAmount)) );
                                                StoreWDCount += 1;
                                            }
                                            <tr>
                                                <td class="text-center" @backgroundColor>@vehicle.Location</td>
                                                <td class="text-center" @backgroundColor><a href="https://www.fitzmall.com/Inventory/Detail/@vehicle.XrefId" target="_blank">@vehicle.StockNumber</a></td>
                                                <td class="text-center" @backgroundColor>@vehicle.ModelYear</td>
                                                <td class="text-center" @backgroundColor>@vehicle.Make</td>
                                                <td class="text-center" @backgroundColor>@vehicle.Model</td>
                                                @*<td class="text-center">@vehicle.VIN</td>
                                            <td class="text-center">@vehicle.Color</td>*@
                                                <td class="text-center" @backgroundColor>@vehicle.DaysInventory</td>
                                                <td class="text-center" @backgroundColor>@vehicle.Days4008</td>
                                                <td class="text-center" @backgroundColor>@vehicle.Miles</td>
                                        
                                                <td class="text-center" @backgroundColor>@vehicle.CostAmount.ToString("C", nfi)</td>
                                                <td class="text-center" @backgroundColor>@vehicle.ListAmount.ToString("C", nfi)</td>

                                                <td class="text-center" @backgroundColor>@CurrentInvAmount.ToString("C", nfi)</td>
                                                <td class="text-center" @backgroundColor>@WriteDownAmount.ToString("C", nfi)</td>
                                                <td class="text-center" @backgroundColor>@WriteDownPercent.ToString("P",nfi)</td>

                                                <td class="text-center" @backgroundColor>@vehicle.NewListAmount.ToString("C", nfi)</td>
                                                <td class="text-center" @backgroundColor>@DaysAtPrice</td>
                                                @if (!bTransfer && !vehicle.IsSold)
                                                {
                                                    <td class="text-center" @backgroundColor>@ProfitOrigInvAmount.ToString("C", nfi)</td>
                                                    <td class="text-center" @backgroundColor>@ProfitCurrentInvAmount.ToString("C", nfi)</td>
                                                }
                                                else
                                                {
                                                    <td class="text-center" @backgroundColor></td>
                                                    <td class="text-center" @backgroundColor></td>
                                                }
                                                @if (vehicle.IsSold)
                            {
                                                    <td class="text-center" @backgroundColor>@vehicle.Status <a href="http://jjfserver/SalesCommission/Sales/DealDetail/@vehicle.DealNumber" target="_blank">(SOLD)</a></td>
                                                    <td class="text-center" @backgroundColor>@vehicle.CustomerName</td>
                                                    <td class="text-center" @backgroundColor>@vehicle.SellPrice.ToString("C", nfi)</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.SoldLocation</td>*@
                                                    <td class="text-center" @backgroundColor>@vehicle.SoldDate.ToShortDateString()</td>
                                                    @*<td class="text-center" @backgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>*@
                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfit.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicleProfitWD.ToString("C", nfi)</td>
                                                    <td class="text-center" @profitbackgroundColor>@vehicle.TotalPVR.ToString("C", nfi)</td>
                                                }
                                                else
                                                {
                                                    <td class="text-center" @backgroundColor>@vehicle.Status</td>
                                                    <td class="text-center" @backgroundColor></td>
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @backgroundColor></td>
                                                    @*<td class="text-center" @backgroundColor></td>*@
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                    <td class="text-center" @profitbackgroundColor></td>
                                                }
                                            </tr>

                                            StoreNewCostAmountTotal += CurrentInvAmount;
                                            StoreWDAmountTotal += WriteDownAmount;

                                            if (!bTransfer && !vehicle.IsSold)
                                            {
                                                StoreOrigProfitTotal += ProfitOrigInvAmount;
                                                StoreWDProfitTotal += ProfitCurrentInvAmount;
                                            }

                                            StoreWDPercentTotal += WriteDownPercent;
                                        }
                                    }
                                </tbody>
                                @{

                                    var StoreaverageDays = 0;
                                    if (StoreVehicleCount > 0)
                                    {
                                        StoreaverageDays = StoreDaysTotal / StoreVehicleCount;
                                    }
                                    else
                                    {
                                        StoreaverageDays = 0;
                                    }


                                    var profitIndicator = "";
                                    var lossIndicator = "";

                                    if (StoreVehicleProfitTotal < 0)
                                    {
                                        profitIndicator = "style=color:red";
                                    }

                                    if (StoreVehicleLossTotal < 0)
                                    {
                                        lossIndicator = "style=color:red";
                                    }

                                    var VehicleTotalPVR = (TotalRetailPVR + TotalTransferPVR); // / (AllSoldCount + AllTransferCount);
                                    var VehicleRetailTotalPVR = (TotalRetailPVR); // / AllSoldCount);
                                    var VehicleTransferTotalPVR = (TotalTransferPVR); // /AllTransferCount);

                                    decimal avgStoreVehicleProfit = 0;
                                    decimal avgStoreTransferVehicleProfit = 0;
                                    decimal avgStoreRetailVehicleProfit = 0;

                                    decimal avgStoreVehicleWDProfit = 0;
                                    decimal avgStoreTransferVehicleWDProfit = 0;
                                    decimal avgStoreRetailVehicleWDProfit = 0;

                                    decimal avgStoreVehicleSLProfit = 0;
                                    decimal avgStoreTransferVehicleSLProfit = 0;
                                    decimal avgStoreRetailVehicleSLProfit = 0;

                                    if ((StoreSoldCount + StoreTransferCount) > 0)
                                    {
                                        avgStoreVehicleProfit = (StoreVehicleProfitTotal / (StoreSoldCount + StoreTransferCount));
                                        avgStoreVehicleWDProfit = (StoreVehicleWDProfitTotal / (StoreSoldCount + StoreTransferCount));
                                        avgStoreVehicleSLProfit = (StoreVehicleSLProfitTotal / (StoreSoldCount + StoreTransferCount));
                                    }
                                    if (StoreTransferCount > 0)
                                    {
                                        avgStoreTransferVehicleProfit = (StoreTransferProfitTotal / (StoreTransferCount));
                                        avgStoreTransferVehicleWDProfit = (StoreTransferWDProfitTotal / (StoreTransferCount));
                                        avgStoreTransferVehicleSLProfit = (StoreTransferSLProfitTotal / (StoreTransferCount));

                                    }
                                    if (StoreSoldCount > 0)
                                    {
                                        avgStoreRetailVehicleProfit = (StoreRetailProfitTotal / (StoreSoldCount));
                                        avgStoreRetailVehicleWDProfit = (StoreRetailWDProfitTotal / (StoreSoldCount));
                                        avgStoreRetailVehicleSLProfit = (StoreRetailSLProfitTotal / (StoreSoldCount));
                                    }
                                }
                                <tfoot>
                                    <tr style="background-color:#d9edf7">
                                        <th class="text-center">Totals</th>
                                        <th class="text-center">Units:</th>
                                        <th class="text-center">@StoreVehicleCount</th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center">@StoreCostAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreListAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreNewCostAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreWDAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center"></th>

                                        <th class="text-center">@StoreNewListAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center"></th>
                                        <th class="text-center">@StoreOrigProfitTotal.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreWDProfitTotal.ToString("C", nfi)</th>

                                        <th class="text-center">Sold: @StoreSoldCount</th>
                                        <th class="text-center">Transfers: @StoreTransferCount</th>
                                        <th class="text-center">@StoreSoldAmountTotal.ToString("C", nfi)</th>
                                        <th class="text-center">All:</th>
                                        @*<th class="text-center">@VehicleTotalPVR.ToString("C", nfi)</th>*@
                                        <th class="text-center" @profitIndicator>@StoreVehicleProfitTotal.ToString("C", nfi)<br/>@avgStoreVehicleProfit.ToString("C", nfi)</th>
                                        <th class="text-center" @profitIndicator>@StoreVehicleWDProfitTotal.ToString("C", nfi)<br />@avgStoreVehicleWDProfit.ToString("C", nfi)</th>
                                        <th class="text-center" @profitIndicator>@StoreVehicleSLProfitTotal.ToString("C", nfi)<br />@avgStoreVehicleSLProfit.ToString("C", nfi)</th>
                                    </tr>
                                    @{
                                                decimal avgInvAmount = 0;
                                                decimal avgListAmount = 0;
                                                decimal avgNewInvAmount = 0;
                                                decimal avgNewListAmount = 0;

                                                decimal avgWDAmount = 0;
                                                decimal avgWDPercent = 0;
                                                decimal avgPriceDays = 0;

                                                decimal avgOrigProfit = 0;
                                                decimal avgWDProfit = 0;

                                                avgInvAmount = (StoreCostAmountTotal / StoreVehicleCount);
                                                avgListAmount = (StoreListAmountTotal / StoreVehicleCount);
                                                avgNewInvAmount = (StoreNewCostAmountTotal / (StoreVehicleCount - StoreSoldCount));
                                                avgNewListAmount = (StoreNewListAmountTotal / StoreVehicleCount);
                                                if (StoreWDCount > 0)
                                                {
                                                    avgWDAmount = (StoreWDAmountTotal / StoreWDCount);
                                                    avgWDPercent = (StoreWDPercentTotal / StoreWDCount);
                                                }
                                                avgOrigProfit = (StoreOrigProfitTotal / StoreVehicleCount);
                                                avgWDProfit = (StoreWDProfitTotal / StoreVehicleCount);

                                                avgPriceDays = (StorePriceTotal / StoreVehicleCount);

                                            }
                                    <tr style="background-color:#d9edf7">
                                        <th class="text-center" colspan="20"></th>
                                        <th class="text-center">Retail:</th>
                                        @*<th class="text-center">@VehicleRetailTotalPVR.ToString("C", nfi)</th>*@
                                        <th class="text-center" @lossIndicator>@StoreRetailProfitTotal.ToString("C", nfi)<br />@avgStoreRetailVehicleProfit.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreRetailWDProfitTotal.ToString("C", nfi)<br />@avgStoreRetailVehicleWDProfit.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreRetailSLProfitTotal.ToString("C", nfi)<br />@avgStoreRetailVehicleSLProfit.ToString("C", nfi)</th>
                                    </tr>
                                    <tr style="background-color:#d9edf7">
                                        <th class="text-center" colspan="20"></th>
                                        <th class="text-center">Transfers:</th>
                                        @*<th class="text-center">@VehicleTransferTotalPVR.ToString("C", nfi)</th>*@
                                        <th class="text-center" @lossIndicator>@StoreTransferProfitTotal.ToString("C", nfi)<br />@avgStoreTransferVehicleProfit.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreTransferWDProfitTotal.ToString("C", nfi)<br />@avgStoreTransferVehicleWDProfit.ToString("C", nfi)</th>
                                        <th class="text-center">@StoreTransferSLProfitTotal.ToString("C", nfi)<br />@avgStoreTransferVehicleSLProfit.ToString("C", nfi)</th>
                                    </tr>

                                    <tr style="background-color:#d9edf7">
                                        <th class="text-center">Averages</th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center">Avg Days:</th>
                                        <th class="text-center">@StoreaverageDays</th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center">@avgInvAmount.ToString("C", nfi)</th>
                                        <th class="text-center">@avgListAmount.ToString("C", nfi)</th>
                                        <th class="text-center">@avgNewInvAmount.ToString("C", nfi)</th>
                                        <th class="text-center">@avgWDAmount.ToString("C", nfi)</th>
                                        <th class="text-center">@avgWDPercent.ToString("P", nfi)</th>
                                        <th class="text-center">@avgNewListAmount.ToString("C", nfi)</th>
                                        <th class="text-center">@avgPriceDays</th>
                                        <th class="text-center">@avgOrigProfit.ToString("C", nfi)</th>
                                        <th class="text-center">@avgWDProfit.ToString("C", nfi)</th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center"></th>
                                        <th class="text-center" colspan="4"></th>
                                        @*<th class="text-center" colspan="2">Loss:</th>
                                        <th class="text-center" @lossIndicator>@StoreVehicleLossTotal.ToString("C", nfi)</th>*@

                                    </tr>
                                </tfoot>
                            </table>

                        }
                    </div>
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('#vehicleListing-@location').DataTable({
                                searching: true,
                                dom: 'Bfrtip',
                                pageLength: -1,
                                buttons: [
                                    {
                                        extend: 'copyHtml5', footer: true,
                                    },
                                    {
                                        extend: 'excelHtml5', footer: true,
                                    },
                                    {
                                        extend: 'pdfHtml5', footer: true,
                                        orientation: 'landscape'
                                    },
                                    {
                                        extend: 'print', footer: true,
                                        orientation: 'landscape'
                                    }
                                ],
                                columnDefs: [
                                  { type: 'any-number', targets: [8, 9, 10, 11, 13, 15] },

                                ]

                            });
                        });

                    </script>

                                    }
                <div class="tab-pane fade" id="repo" role="tabpanel" aria-labelledby="repo-tab">
                    <h3>Repos</h3>

                    @{
                        decimal RepoListAmountTotal = 0;
                        decimal RepoCostAmountTotal = 0;
                        decimal RepoNewListAmountTotal = 0;
                        decimal RepoDiffToMarketAmountTotal = 0;

                        int RepoSoldCount = 0;
                        decimal RepoSoldAmountTotal = 0;
                        decimal RepoVehicleProfitTotal = 0;
                        decimal RepoVehicleLossTotal = 0;

                        int RepoDaysTotal = 0;
                        int RepoVehicleCount = 0;
                    }
                    <table class="table table-responsive table-bordered table-striped" id="vehicleListing-repos" style="font-size:11px;">
                        <thead>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">Loc</th>
                                <th class="text-center">Stock #</th>
                                <th class="text-center">Year</th>
                                <th>Make</th>
                                <th>Model</th>
                                <th class="text-center">Days in Inventory</th>
                                <th class="text-center">4008</th>
                                <th class="text-center">Mileage</th>
                                <th>List Amount</th>
                                <th>Cost Amount</th>
                                <th>New List Amount</th>
                                <th>Diff Cost to Market</th>
                                <th>Status</th>
                                <th>Sell Price</th>
                                <th>Sold Loc</th>
                                <th>Profit</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RepoVehicles != null)
                            {
                                RepoVehicleCount = Model.RepoVehicles.Count;

                                foreach (var vehicle in Model.RepoVehicles)
                                {

                                    var diffToMarket = vehicle.ListAmount - vehicle.CostAmount;
                                    RepoDaysTotal += vehicle.DaysInventory;

                                    RepoListAmountTotal += vehicle.ListAmount;
                                    RepoCostAmountTotal += vehicle.CostAmount;
                                    RepoNewListAmountTotal += vehicle.NewListAmount;
                                    RepoDiffToMarketAmountTotal += diffToMarket;

                                    decimal vehicleProfit = 0;

                                    var backgroundColor = "";

                                    if (vehicle.IsSold)
                                    {
                                        vehicleProfit = vehicle.SellPrice - vehicle.CostAmount;
                                        RepoSoldCount += 1;
                                        RepoSoldAmountTotal += vehicle.SellPrice;
                                        RepoVehicleProfitTotal += vehicleProfit;
                                        backgroundColor = "style=background-color:#b7e1cd";

                                        if (vehicleProfit < 0)
                                        {
                                            RepoVehicleLossTotal += vehicleProfit;
                                            backgroundColor = "style=background-color:#f4c7c3";
                                        }
                                    }

                                    <tr>
                                        <td class="text-center" @backgroundColor>@vehicle.Location</td>
                                        <td class="text-center" @backgroundColor><a href="https://www.fitzmall.com/Inventory/Detail/@vehicle.XrefId" target="_blank">@vehicle.StockNumber</a></td>
                                        <td class="text-center" @backgroundColor>@vehicle.ModelYear</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Make</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Model</td>
                                        @*<td class="text-center">@vehicle.VIN</td>
                                    <td class="text-center">@vehicle.Color</td>*@
                                        <td class="text-center" @backgroundColor>@vehicle.DaysInventory</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Days4008</td>
                                        <td class="text-center" @backgroundColor>@vehicle.Miles</td>
                                        <td class="text-center" @backgroundColor>@vehicle.ListAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@vehicle.CostAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@vehicle.NewListAmount.ToString("C", nfi)</td>
                                        <td class="text-center" @backgroundColor>@diffToMarket.ToString("C", nfi)</td>

                                        @if (vehicle.IsSold)
                                        {
                                            <td class="text-center" @backgroundColor>SOLD</td>
                                            <td class="text-center" @backgroundColor>@vehicle.SellPrice.ToString("C", nfi)</td>
                                            <td class="text-center" @backgroundColor>@vehicle.SoldLocation</td>
                                            <td class="text-center" @backgroundColor>@vehicleProfit.ToString("C", nfi)</td>
                                        }
                                        else
                                        {
                                            <td class="text-center" @backgroundColor></td>
                                            <td class="text-center" @backgroundColor></td>
                                            <td class="text-center" @backgroundColor></td>
                                            <td class="text-center" @backgroundColor></td>
                                        }
                                    </tr>

                                }
                            }
                        </tbody>
                        @{
                            var RepoaverageDays = 0;

                            if (RepoVehicleCount > 0)
                            {
                                RepoaverageDays = RepoDaysTotal / RepoVehicleCount;
                            }

                            var RepoprofitIndicator = "";
                            var RepolossIndicator = "";

                            if (RepoVehicleProfitTotal < 0)
                            {
                                RepoprofitIndicator = "style=color:red";
                            }

                            if (RepoVehicleLossTotal < 0)
                            {
                                RepolossIndicator = "style=color:red";
                            }
                        }
                        <tfoot>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center">Totals</th>
                                <th class="text-center">Units:</th>
                                <th class="text-center">@RepoVehicleCount</th>
                                <th class="text-center"></th>
                                <th class="text-center">Avg Days:</th>
                                <th class="text-center">@RepoaverageDays</th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">@RepoListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@RepoCostAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@RepoNewListAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">@RepoDiffToMarketAmountTotal.ToString("C", nfi)</th>

                                <th class="text-center">@RepoSoldCount</th>
                                <th class="text-center">@RepoSoldAmountTotal.ToString("C", nfi)</th>
                                <th class="text-center">All:</th>
                                <th class="text-center" @RepoprofitIndicator>@RepoVehicleProfitTotal.ToString("C", nfi)</th>

                            </tr>
                            <tr style="background-color:#d9edf7">
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center"></th>

                                <th class="text-center"></th>
                                <th class="text-center"></th>
                                <th class="text-center">Loss:</th>
                                <th class="text-center" @RepolossIndicator>@RepoVehicleLossTotal.ToString("C", nfi)</th>

                            </tr>
                        </tfoot>

                        <script type="text/javascript">
                            $('#RepoSummaryUnits').html('@RepoVehicleCount');
                            $('#RepoSummarySold').html('@RepoSoldCount');
                            $('#RepoSummaryDays').html('@RepoaverageDays');
                            $('#RepoSummaryList').html('@RepoListAmountTotal.ToString("C", nfi)');
                            $('#RepoSummaryCost').html('@RepoCostAmountTotal.ToString("C", nfi)');
                            $('#RepoSummaryNewList').html('@RepoNewListAmountTotal.ToString("C", nfi)');
                            $('#RepoSummaryDiffCost').html('@RepoDiffToMarketAmountTotal.ToString("C", nfi)');
                            $('#RepoSummaryLastAdjust').html('0');
                            $('#RepoSummarySoldLoss').html('@RepoVehicleLossTotal.ToString("C", nfi)');
                            $('#RepoSummarySoldAll').html('@RepoVehicleProfitTotal.ToString("C", nfi)');
                        </script>

                    </table>

                </div>
            </div>
    </div>
</div>



}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            $('#vehicleListing-summary').DataTable({
              searching: true,
              dom: 'Bfrtip',
              pageLength: -1,
              buttons: [
                  {
                      extend: 'copyHtml5', footer: true,
                  },
                  {
                      extend: 'excelHtml5', footer: true,
                  },
                  {
                      extend: 'pdfHtml5', footer: true,
                      orientation: 'landscape'
                  },
                  {
                      extend: 'print', footer: true,
                      orientation: 'landscape'
                  }
              ],
              columnDefs: [
                { type: 'any-number', targets: [4,5,6,7,8, 9, 10] },

              ]

            });
            $('#inventory-summary').DataTable({
                searching: true,
                dom: 'Bfrtip',
                pageLength: -1,
                buttons: [
                    {
                        extend: 'copyHtml5', footer: true,
                    },
                    {
                        extend: 'excelHtml5', footer: true,
                    },
                    {
                        extend: 'pdfHtml5', footer: true,
                        orientation: 'landscape'
                    },
                    {
                        extend: 'print', footer: true,
                        orientation: 'landscape'
                    }
                ],
                columnDefs: [
                  { type: 'any-number', targets: [1, 4, 6, 8, 10] },

                ]

            });
      });

                    </script>

}